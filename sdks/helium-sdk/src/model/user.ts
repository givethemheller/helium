/**
 * @helium/ts-tsoa-api
 * Helium API with TSOA generator and openAPI sdk generator
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { GROUPS } from './gROUPS';
import { UserGoogleProvider } from './userGoogleProvider';

export class User {
    /**
    * The users mongodb id
    */
    'id': string;
    /**
    * Code texted to the user to validate their phone number
    */
    'phoneValidationCode'?: string;
    /**
    * the phone number of the user that can be used for phone based  authentication
    */
    'phone'?: number;
    /**
    * The users password, encrypted
    */
    'password'?: string;
    /**
    * Email for the user
    */
    'email'?: string;
    /**
    * Current token for the user
    */
    'currentToken'?: string;
    'googleProvider'?: UserGoogleProvider;
    /**
    * The date and time that the users session began
    */
    'sessionStartDate'?: Date;
    /**
    * date at which the password hash is no longer valid for resetting
    */
    'passwordResetExpires'?: Date;
    /**
    * password reset hash that the user can use to reset their password
    */
    'passwordResetHash'?: string;
    /**
    * Permission level of the user
    */
    'userPermissions': Array<GROUPS>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "_id",
            "type": "string"
        },
        {
            "name": "phoneValidationCode",
            "baseName": "phoneValidationCode",
            "type": "string"
        },
        {
            "name": "phone",
            "baseName": "phone",
            "type": "number"
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "currentToken",
            "baseName": "currentToken",
            "type": "string"
        },
        {
            "name": "googleProvider",
            "baseName": "googleProvider",
            "type": "UserGoogleProvider"
        },
        {
            "name": "sessionStartDate",
            "baseName": "sessionStartDate",
            "type": "Date"
        },
        {
            "name": "passwordResetExpires",
            "baseName": "passwordResetExpires",
            "type": "Date"
        },
        {
            "name": "passwordResetHash",
            "baseName": "passwordResetHash",
            "type": "string"
        },
        {
            "name": "userPermissions",
            "baseName": "userPermissions",
            "type": "Array<GROUPS>"
        }    ];

    static getAttributeTypeMap() {
        return User.attributeTypeMap;
    }
}

